name: CI

on: [push, pull_request]

env:
  CACHE_IMAGE: fmrcampos/docker-ci-cache
  DOCKER_BUILDKIT: 1
  NODE_VERSION: 14.4.0

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@v1
      - name: Log in to docker hub
        run: echo ${{ secrets.REGISTRY_PASS }} | docker login -u ${{ secrets.REGISTRY_USER }} --password-stdin
      - name: Build static from dockerfile
        run: |
          docker build \
            --target static \
            --cache-from $CACHE_IMAGE:static \
            --tag $CACHE_IMAGE:static \
            --file ./Dockerfile \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            "."
      - name: Build build from dockerfile
        run: |
          docker build \
            --target build \
            --cache-from $CACHE_IMAGE:static \
            --cache-from $CACHE_IMAGE:build \
            --tag $CACHE_IMAGE:build \
            --file ./Dockerfile \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            "."
      - name: Build stage from dockerfile
        run: |
          docker build \
            --cache-from $CACHE_IMAGE:static \
            --cache-from $CACHE_IMAGE:build \
            --cache-from $CACHE_IMAGE:stage \
            --tag $CACHE_IMAGE:stage \
            --file ./Dockerfile \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            "."
      - name: Push static image to docker hub
        run: docker push $CACHE_IMAGE:static
      - name: Push build image to docker hub
        run: docker push $CACHE_IMAGE:build
      - name: Push stage image to docker hub
        run: docker push $CACHE_IMAGE:stage

  docs:
    needs: build
    runs-on: ubuntu-latest
    container: fmrcampos/docker-ci-cache:stage
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Documentation
        run: |
          apt-get update && apt-get install make
          make docs

  test:
    needs: build
    runs-on: ubuntu-latest
    container: fmrcampos/docker-ci-cache:stage
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      # Performs a clean installation of all dependencies in the `package.json` file
      - name: Install dependencies
        run: |
          apt-get update && apt-get install make
          nvm install $NODE_VERSION
          pip install -U pip setuptools wheel
          pip install -r requirements.txt
          pip install -r requirements/dev.txt
          npm i -g npm
          npm install -g gulp-cli
          npm ci

      - name: Connect to PostgreSQL
        # Runs a script that creates a PostgreSQL client, populates
        # the client with data, and retrieves data
        run: node client.js
        # Environment variable used by the `client.js` script to create a new PostgreSQL client.
        env:
          # The hostname used to communicate with the PostgreSQL service container
          POSTGRES_HOST: postgres
          # The default PostgreSQL port
          POSTGRES_PORT: 5432

      - name: Run tests
        run: bin/tests --postgresql-host 127.0.0.1